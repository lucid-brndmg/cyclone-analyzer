expectedErrors: ["EmptyEdge"]
cases:
  - |
    graph G {
      node A {}
      node B {}
      node C {}

      edge { A -> *[A, B, C] }
    }
  - |
    graph G {
      node A {}
      node B {}
      node C {}
    
      edge { A -> +[B, C] }
    }
  - |
    graph G {
      node A {}

      edge { A -> + }
    }
  - |
    graph G { 
      node S1 {} 
      node S2 {}

      transition {S1 <-> +[S2]}

      goal {
          check for 1
      }
    }
  - |
    graph G { 
      node S1 {} 
      transition {S1 <-> +}
    }

casesCounter:
  - |
    graph G { 
          node S1 {} 
          node S2 {}

          transition {S1 <-> +}

          goal {
              check for 1
          }
        }
  - |
    graph G {
      node S1 {}
      node S2 {}
      edge {S1 -> S2}
    }
  - |
    graph G {
      node S1 {}
      edge {S1 -> *}
    }